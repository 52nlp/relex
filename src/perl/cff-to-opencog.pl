#! /usr/bin/env perl
#
# cff-to-opencog.pl
#
# Read in files in the "compact file format", as generated by the
# src/java/relex/output/CompactView.java class, and convert them into 
# opencog format, as generated by src/java/relex/output/OpenCogScheme.java
#
# Copyright (c) 2008 Linas Vepstas <linasvepstas@gmail.com>
#

#--------------------------------------------------------------------
# Need to specify the binmodes, in order for \w to match utf8 chars
use utf8;
binmode STDIN, ':encoding(UTF-8)'; 
binmode STDOUT, ':encoding(UTF-8)';

use UUID;

print "scm\n";

$raw_sentence = 0;
$in_parse = 0;
$in_features = 0;

while (<>)
{
	if (/<sentence /) { $raw_sentence = 1;  next; }
	if ($raw_sentence)
	{
		$raw_sentence = 0;
		chop;
		print "; SENTENCE: [$_]\n";
	}
	if (/<parse id/)
	{
		$in_parse = 1;
	}
	if (/<\/parse>/)
	{
		$in_parse = 0;
	}
	if (/<features>/)
	{
		$in_features = 1;
	}
	if (/<\/features>/)
	{
		$in_features = 0;
	}
	if ($in_features)
	{
		($n, $word, $lemma, $pos, $feat) = split;
		UUID::generate($uuid);
		UUID::unparse($uuid, $uuidstr);
		$word_inst = $word . "@" . $uuidstr;

		print "(ReferenceLink\n";
		print "\t(ConceptNode \"$word_inst\")\n";
		print "\t(WordNode \"$word\")\n";
		print ")\n";

		print "(LemmaLink\n";
		print "\t(ConceptNode \"$word_inst\")\n";
		print "\t(WordNode \"$lemma\")\n";
		print ")\n";

		print "(PartOfSpeechLink\n";
		print "\t(ConceptNode \"$word_inst\")\n";
		print "\t(DefinedLinguisticConceptNode \"$pos\")\n";
		print ")\n";

		@feats = split (/\|/, $feat);
		foreach $f (@feats)
		{
			print "(InheritanceLink\n";
			print "\t(ConceptNode \"$word_inst\")\n";
			print "\t(DefinedLinguisticConceptNode \"$f\")\n";
			print ")\n";
		}
	}
}
