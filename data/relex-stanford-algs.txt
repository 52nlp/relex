;
; relex-stanford-algs.txt
;
; Rules to extract Stanford-parser-style relationships.
; The goal here is to be as compatible with the Stanford
; parser as possible, given the parse provided by Link-Grammar.
;
;///////////////////////////////////////////////////////////////////////
;
; GENERATE BASIC SF RELATIONS
; Stanford parser generates some relations which RelEx does not.
; This includes det, aux and auxpass. These qre quire simple. Generate
; these here.
;
; Explicit determiner markup
#TemplateActionAlg
SF_DET
<LAB> = \D\.*
=
<F_R ref sf-links _det> = <F_L ref>
;
; Explicit aux markup.
; "there is a place we can go"  aux(go-7, can-6)
; "The accident happened as the night was falling." aux(falling-8, was-7)
#TemplateActionAlg
SF_AUX
<LAB> = \I\.*|\Pg\.*b
=
<F_R ref sf-links _aux> = <F_L ref>

;
; "has been killed" - aux(killed, has)
#TemplateActionAlg
SF_AUX2
<LAB> = \PPf
<F_L head-word> != %
=
<F_L head-word ref sf-links _aux> = <F_L ref>

;
; "has been killed" - auxpass(killed, been)
#TemplateActionAlg
SF_AUXPASS
<LAB> = \Pv
=
<F_R ref sf-links _auxpass> = <F_L ref>


;///////////////////////////////////////////////////////////////////////
;
; ALTERNATIVES TO PREP MARKUP
; Relex generates prepositional relations, whereas Stanford tends
; to discriminate more, frequently posting clauses and complements
; distinctly.
; Here, we untangle these.

; The preposition modifies the preceeding phrase
; "The accident happened as the night was falling."
; mark(falling-8, as-4)
; advcl(happened-3, falling-8)

#TemplateActionAlg
SF_ADVCL_OBJECT
<LAB> = MVs|\TH\.*|\WN\.*
<F_R head-word> != %
=
<F_L ref sf-links _advcl> = <F_R head-word ref>
<F_L DONT_SHOW_PREP> = T


;
; "The accident happened as the night was falling." - mark(falling-8, as-4)
;
#TemplateActionAlg
SF_ADVCL_COMPLEMENT
<LAB> = MVs|\TH\.*|\WN\.*
<F_R head-word> != %
=
<F_R head-word ref sf-links _mark> = <F_R ref>


;
;  If you know who did it, you should tell the teacher. - advcl(tell-10, know-3)
;
#TemplateActionAlg
SF_ADVCL_OBJECT
<LAB> = \CO\.*
<F_R head-word> != %
<F_L head-word> != %
=
<F_R head-word ref sf-links _advcl> = <F_L head-word ref>
<F_R head-word DONT_SHOW_PREP> = T

; 
; If you know who did it, you should tell the teacher. -  mark(know-3, if-1)
;
#TemplateActionAlg
SF_ADVCL2_COMPLEMENT
<LAB> = \Cs
<F_R head-word> != %
=
<F_R head-word ref sf-links _mark> = <F_L ref>


; 
; If you know who did it, you should tell the teacher. -  ccomp(know-3, did-5)
;
#TemplateActionAlg
SF_CLAUSAL_COMPLEMENT
<LAB> = \QI\.*
<F_R head-word> != %
=
<F_L ref sf-links _ccomp> = <F_R head-word ref>

;///////////////////////////////////////////////////////////////////////
;
; ODDBALLS
;
; Here's an odd one: prep-by is turned into "agent"
; e.g. "killed by police" - agent(killed, police)
;
#TemplateActionAlg
SF_AGENT
<prep-links by> != %
=
<sf-links _agent> = <prep-links by>
<nameSource DONT_SHOW_PREP> = T

;///////////////////////////////////////////////////////////////////////
;
; TRANSFER PREP LINKS TO SF-LINKS
;
; But don't transfer those that correspond to adverbial clauses, etc.
;
#TemplateActionAlg
PREP_TO_SF
<ref prep-links> != %
<DONT_SHOW_PREP> != T
=
<ref sf-links> <= <ref prep-links>

;///////////////////////////////////////////////////////////////////////
;
; TRANSFER LINKS TO SF-LINKS
;
; Stanford nsubj is just like relex subj
#TemplateActionAlg
SUBJ_TO_SF_LINKS
<HEAD-FLAG> = T
<subj> != %
=
<ref sf-links _nsubj> = <subj>
;
;
#TemplateActionAlg
EXPL_TO_SF_LINKS
<HEAD-FLAG> = T
<expl> != %
=
<ref sf-links _expl> = <expl>
;
#TemplateActionAlg
OBJ_TO_SF_LINKS
<HEAD-FLAG> = T
<obj> != %
=
<ref sf-links _dobj> = <obj>
;
;
#TemplateActionAlg
OBJ_TO_SF_LINKS_GERUND
<POS> = noun
<obj> != %
=
<ref sf-links _ddobj> = <obj>
;
; Modifiers
;
#TemplateActionAlg
ACOMP_TO_SF
<ref links _to-be> != %
=
<ref sf-links _acomp> = <ref links _to-be>

;
#TemplateActionAlg
ADVMOD_TO_SF
<ref links _advmod> != %
=
<ref sf-links _advmod> = <ref links _advmod>

#TemplateActionAlg
AMOD_TO_SF
<ref links _amod> != %
=
<ref sf-links _amod> = <ref links _amod>

;
#TemplateActionAlg
APPO_TO_SF
<ref links _appo> != %
=
<ref sf-links _appos> = <ref links _appo>

;
#TemplateActionAlg
IOBJ_TO_SF
<ref links _iobj> != %
=
<ref sf-links _iobj> = <ref links _iobj>


;
#TemplateActionAlg
NN_TO_SF
<ref links _nn> != %
=
<ref sf-links _nn> = <ref links _nn>


;///////////////////////////////////////////////////////////////////////
;
; Re-label objects, based on subject
; "There is a place" - expl(is-2, There-1) nsubj(is-2, place-4)
;
#TemplateActionAlg
SF_OBJ_TO_SUBJ
<sf-links _expl> != %
<sf-links _dobj> != %
=
<sf-links _nsubj> = <sf-links _dobj>
<sf-links _dobj> = %

;
; Demote obj back to nsubjpass
;
#TemplateActionAlg
SF_OBJ_TO_NSUBJPASS
<OBJ-LINK-TAG> = Pv
<ref sf-links _dobj> != %
=
<ref sf-links _nsubjpass> = <ref sf-links _dobj>
<ref sf-links _dobj> = %

