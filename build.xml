<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build" name="relex">
    <property name="VERSION" value="0.98"/>
    <property name="REVISION" value="0.98.1"/>

    <property name="GATE_HOME" value="/opt/GATE-4.0"/>
    <property name="PREFIX" value="/usr/share/java"/>
    <property name="ALTPREFIX" value="/usr/local/share/java"/>

    <property name="INSTALLDIR" value="/usr/local/share/java"/>
 
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>

    <path id="relex.classpath">
        <pathelement location="bin"/>
        <pathelement location="${PREFIX}/gnu-getopt.jar"/>
        <pathelement location="${PREFIX}/opennlp-tools-1.3.0.jar"/>
        <pathelement location="${PREFIX}/jwnl.jar"/>
        <pathelement location="${PREFIX}/jwnl-1.4rc2.jar"/>
        <pathelement location="${PREFIX}/jwnl-1.3.3.jar"/>
        <pathelement location="${PREFIX}/maxent-2.4.0.jar"/>
        <pathelement location="${PREFIX}/trove.jar"/>
        <pathelement location="${PREFIX}/linkgrammar-4.4.2.jar"/>
        <pathelement location="${PREFIX}/commons-logging.jar"/>

        <pathelement location="${ALTPREFIX}/gnu-getopt.jar"/>
        <pathelement location="${ALTPREFIX}/opennlp-tools-1.3.0.jar"/>
        <pathelement location="${ALTPREFIX}/jwnl.jar"/>
        <pathelement location="${ALTPREFIX}/jwnl-1.4rc2.jar"/>
        <pathelement location="${ALTPREFIX}/jwnl-1.3.3.jar"/>
        <pathelement location="${ALTPREFIX}/maxent-2.4.0.jar"/>
        <pathelement location="${ALTPREFIX}/trove.jar"/>
        <pathelement location="${ALTPREFIX}/linkgrammar-4.4.2.jar"/>
        <pathelement location="${ALTPREFIX}/commons-logging.jar"/>

        <pathelement location="${GATE_HOME}/bin/gate.jar"/>
        <pathelement location="${GATE_HOME}/lib/jdom.jar"/>
        <pathelement location="${GATE_HOME}/lib/xercesImpl.jar"/>
        <pathelement location="${GATE_HOME}/lib/jasper-compiler-jdt.jar"/>
        <pathelement location="${GATE_HOME}/lib/nekohtml-0.9.5.jar"/>
        <pathelement location="${GATE_HOME}/lib/ontotext.jar"/>
        <pathelement location="${GATE_HOME}/lib/stax-api-1.0.1.jar"/>
        <pathelement location="${GATE_HOME}/lib/PDFBox-0.7.2.jar"/>
    </path>

    <!-- Steps to take on initialization -->
    <target name="init">
        <mkdir dir="bin"/>
    </target>

    <!-- conditional compilation, check for OWL -->
    <available classname="org.semanticweb.owl.model.OWLClass" property="OWL.present"/>
    <target name="no-owl" unless="OWL.present">
       <echo message="Will not build OWL output format; org.semanticweb.owl classes not found."/>
    </target>

    <!-- conditional compilation, check for GATE -->
    <available classname="gate.creole.ANNIEConstants" property="GATE.present"/>
    <target name="no-gate" unless="GATE.present">
       <echo message="Will not build GATE-based entity detector; GATE classes not found."/>
    </target>

    <!-- conditional compilation, check for OpenNLP -->
    <available classname="opennlp.tools.sentdetect.SentenceDetector" property="OpenNLP.present"/>
    <target name="no-opennlp" unless="OpenNLP.present">
       <echo message="Will not build OpenNLP-based sentence detector; OpenNLP classes not found."/>
    </target>

    <target name="build-project" depends="init, no-gate, no-owl, no-opennlp">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin"
            source="${source}" target="${target}">
            <src path="src/java"/>
            <exclude name="**/OWLView.java" unless="OWL.present" />
            <exclude name="**/GateEntityDetector.java" unless="GATE.present" />
            <exclude name="**/DocSplitterOpenNLPImpl.java" unless="OpenNLP.present" />
            <classpath refid="relex.classpath"/>
        </javac>
    </target>

    <!-- misc build targets -->
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>

    <!-- cleanup -->
    <target name="clean">
        <delete dir="bin"/>
        <delete file="relex-${REVISION}.jar"/>
    </target>
    <target name="cleanall" depends="clean"/>
    <target name="realclean" depends="clean"/>

    <!-- Build a jar file, for public consumption -->
    <target name="jar" depends="build-project">
        <jar basedir="bin" destfile="relex-${REVISION}.jar">
            <manifest>
                <attribute name="Implementation-Title" value="RelEx Semantic Relation Extractor"/>
                <attribute name="Implementation-URL" value="http://opencog.org/wiki/RelEx"/>
                <attribute name="Specification-Version" value="${VERSION}"/>
                <attribute name="Implementation-Version" value="${REVISION}"/>
                <attribute name="Main-Class" value="relex.RelationExtractor"/>
            </manifest>
            <fileset file="data/relex-semantic-algs.txt" />
            <fileset file="data/frame/concept_vars.txt" />
            <fileset file="data/frame/mapping_rules.txt" />
            <fileset file="data/wordnet/file_properties.xml" />
            <fileset file="data/sentence-detector/EnglishSD.bin.gz" />
        </jar>
    </target>

    <!-- install on user's system -->
    <target name="install" depends="jar">
        <mkdir dir="${INSTALLDIR}"/>
        <copy file="relex-${REVISION}.jar" todir="${INSTALLDIR}"/>
    </target>

    <!-- tar file for general distribution -->
    <target name="dist">
        <tar destfile="r.tar">
            <tarfileset dir="." prefix="relex-${REVISION}/" excludes=".bzr*/**">
                <include name="AUTHORS"/>
                <include name="ChangeLog"/>
                <include name="LICENSE"/>
                <include name="README"/>
                <include name="build.xml"/>
                <include name="pom.xml"/>
                <include name="relation-extractor.sh"/>
                <include name="link-grammar-server.sh"/>
                <include name="parallel-relation-extractor.sh"/>
                <include name="doc-splitter.sh"/>
                <include name="test-corpus.txt"/>
                <include name="data/frame/concept_vars.txt"/>
                <include name="data/frame/mapping_rules.txt"/>
                <include name="data/relex-semantic-algs.txt"/>
                <include name="data/sentence-detector/EnglishSD.bin.gz"/>
                <include name="data/wordnet/file_properties.xml"/>
                <include name="src/java/relex/anaphora/test-corpus.txt"/>
                <include name="**/README"/>
                <include name="**/*.java"/>
                <include name="src/perl/*.pl"/>
            </tarfileset>
        </tar>
        <gzip destfile="relex-${REVISION}.tar.gz" src="r.tar"/>
        <delete file="r.tar"/>
    </target>

    <!-- demo example run -->
    <target name="run" depends="build-project">
        <java classname="relex.RelationExtractor" failonerror="true" fork="yes">
            <jvmarg line="-Xmx1024m"/>
            <jvmarg line="-Djava.library.path=/usr/lib:/usr/local/lib"/>
            <jvmarg line="-Drelex.algpath=data/relex-semantic-algs.txt"/>
            <jvmarg line="-Dwordnet.configfile=data/wordnet/file_properties.xml"/>
            <jvmarg line="-Dgate.home=${GATE_HOME}"/>
            <classpath refid="relex.classpath"/>
            <arg line="-n 4 -l -t -f -s 'Alice wrote a book about dinosaurs for the University of California in Berkeley.'"/>
        </java>
    </target>

</project>
